{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","chosenElements","chooseElement","ev","product","element","nativeEvent","path","includes","setState","filter","item","style","backgroundColor","document","querySelector","hidden","clearElements","querySelectorAll","forEach","selectedProducts","products","length","slice","join","className","this","map","key","type","onClick","React","Component","ReactDOM","render","getElementById"],"mappings":"sOAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAqGaC,E,4MAjGbC,MAAQ,CACNC,eAAgB,CAAC,Q,EAGnBC,cAAgB,SAACC,EAAIC,GACnB,IAAMC,EAAUF,EAAGG,YAAYC,KAAK,GAEhC,EAAKP,MAAMC,eAAeO,SAASJ,IACrC,EAAKK,UAAS,SAAAT,GAAK,MAAK,CACtBC,eAAgBD,EAAMC,eAAeS,QAAO,SAAAC,GAAI,OAAIA,IAASP,SAG/DC,EAAQO,MAAMC,gBAAkB,KAEhC,EAAKJ,UAAS,SAAAT,GAAK,MAAK,CACtBC,eAAe,GAAD,mBAAMD,EAAMC,gBAAZ,CAA4BG,QAG5CU,SAASC,cAAc,UAAUC,QAAS,EAC1CX,EAAQO,MAAMC,gBAAkB,Y,EAIpCI,cAAgB,WACGH,SAASI,iBAAiB,mBAElCC,SAAQ,SAACf,GAChBA,EAAQQ,MAAMC,gBAAkB,iBAGlC,EAAKJ,UAAS,SAAAT,GAAK,MAAK,CACtBC,eAAgB,Q,EAIpBmB,iBAAmB,SAACC,GAClB,OAAQA,EAASC,QACf,KAAK,EAGH,OAFAR,SAASC,cAAc,UAAUC,QAAS,EAEnC,6BAET,KAAK,EAAG,MAAM,IAAN,OAAWK,EAAX,gBAER,QAAS,MAAM,IAAN,OAAWA,EAASE,MAAM,GAAI,GAAGC,KAAK,MAAtC,yBACDH,EAASE,OAAO,GADf,mB,4CAKb,WAAU,IAAD,OACP,OACE,oCACE,yBAAKE,UAAU,OACb,8CAEGC,KAAKN,iBAAiBM,KAAK1B,MAAMC,iBAEpC,yBAAKwB,UAAU,SACZ3B,EAAgB6B,KAAI,SAAAvB,GAAO,OAC1B,yBACEqB,UAAU,iBACVG,IAAKxB,EACLQ,MAAmB,QAAZR,EACH,CAAES,gBAAiB,WACnB,CAAEA,gBAAiB,gBAEtBT,EACD,yBAAKqB,UAAU,WAEb,4BACEA,UAAU,SACVI,KAAK,SACLC,QAAS,SAAC3B,GACR,EAAKD,cAAcC,EAAIC,KAGxB,EAAKJ,MAAMC,eAAeO,SAASJ,GAChC,SAAW,eAMvB,4BACEyB,KAAK,SACLJ,UAAU,QACVK,QAASJ,KAAKT,eAHhB,oB,GApFMc,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACApB,SAASqB,eAAe,U","file":"static/js/main.203ab2e3.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    chosenElements: ['Jam'],\n  }\n\n  chooseElement = (ev, product) => {\n    const element = ev.nativeEvent.path[2];\n\n    if (this.state.chosenElements.includes(product)) {\n      this.setState(state => ({\n        chosenElements: state.chosenElements.filter(item => item !== product),\n      }));\n\n      element.style.backgroundColor = '';\n    } else {\n      this.setState(state => ({\n        chosenElements: [...state.chosenElements, product],\n      }));\n\n      document.querySelector('.clear').hidden = false;\n      element.style.backgroundColor = '#ff6347';\n    }\n  }\n\n  clearElements = () => {\n    const products = document.querySelectorAll('.goods__product');\n\n    products.forEach((product) => {\n      product.style.backgroundColor = 'transparent';\n    });\n\n    this.setState(state => ({\n      chosenElements: [],\n    }));\n  }\n\n  selectedProducts = (products) => {\n    switch (products.length) {\n      case 0:\n        document.querySelector('.clear').hidden = true;\n\n        return ' No products were selected';\n\n      case 1: return ` ${products} is selected`;\n\n      default: return ` ${products.slice(0, -1).join(', ')}\n        and ${products.slice(-1)} are selected`;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>\n            Selected goods:\n            {this.selectedProducts(this.state.chosenElements)}\n          </h1>\n          <div className=\"goods\">\n            {goodsFromServer.map(product => (\n              <div\n                className=\"goods__product\"\n                key={product}\n                style={product === 'Jam'\n                  ? { backgroundColor: '#ff6347' }\n                  : { backgroundColor: 'transparent' }}\n              >\n                {product}\n                <div className=\"buttons\">\n\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={(ev) => {\n                      this.chooseElement(ev, product);\n                    }}\n                  >\n                    {this.state.chosenElements.includes(product)\n                      ? 'Remove' : 'Choose'}\n                  </button>\n                </div>\n              </div>\n            ))}\n\n            <button\n              type=\"button\"\n              className=\"clear\"\n              onClick={this.clearElements}\n            >\n              Clear All\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}