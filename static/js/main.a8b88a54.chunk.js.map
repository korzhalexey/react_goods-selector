{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","chosenElements","chooseElement","ev","product","element","nativeEvent","path","includes","setState","style","backgroundColor","removeElement","elemet","filter","item","clearElements","document","querySelectorAll","forEach","selectedProducts","products","length","join","className","this","map","key","type","onClick","React","Component","ReactDOM","render","getElementById"],"mappings":"sOAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA0GaC,E,4MAtGbC,MAAQ,CACNC,eAAgB,CAAC,Q,EAGnBC,cAAgB,SAACC,EAAIC,GACnB,IAAMC,EAAUF,EAAGG,YAAYC,KAAK,GAE/B,EAAKP,MAAMC,eAAeO,SAASJ,IACtC,EAAKK,UAAS,SAAAT,GAAK,MAAK,CACtBC,eAAe,GAAD,mBAAMD,EAAMC,gBAAZ,CAA4BG,QAI9CC,EAAQK,MAAMC,gBAAkB,W,EAGlCC,cAAgB,SAACT,EAAIC,GACnB,IAAMS,EAASV,EAAGG,YAAYC,KAAK,GAEnC,EAAKE,UAAS,SAAAT,GAAK,MAAK,CACtBC,eAAgBD,EAAMC,eAAea,QAAO,SAAAC,GAAI,OAAIA,IAASX,SAG/DS,EAAOH,MAAMC,gBAAkB,I,EAGjCK,cAAgB,WACGC,SAASC,iBAAiB,mBAElCC,SAAQ,SAACf,GAChBA,EAAQM,MAAMC,gBAAkB,iBAGlC,EAAKF,UAAS,SAAAT,GAAK,MAAK,CACtBC,eAAgB,Q,EAIpBmB,iBAAmB,SAACC,GAClB,OAAQA,EAASC,QACf,KAAK,EAAG,MAAO,6BACf,KAAK,EAAG,MAAM,IAAN,OAAWD,EAAX,gBACR,QAAS,MAAM,IAAN,OAAWA,EAASE,KAAK,MAAzB,mB,4CAIb,WAAU,IAAD,OACP,OACE,oCACE,yBAAKC,UAAU,OACb,8CAEGC,KAAKL,iBAAiBK,KAAKzB,MAAMC,iBAEpC,yBAAKuB,UAAU,SACZ1B,EAAgB4B,KAAI,SAAAtB,GAAO,OAC1B,yBACEoB,UAAU,iBACVG,IAAKvB,EACLM,MAAmB,QAAZN,EACH,CAAEO,gBAAiB,WACnB,CAAEA,gBAAiB,gBAEtBP,EACD,yBAAKoB,UAAU,WACb,4BACEA,UAAU,SACVI,KAAK,SACLC,QAAS,SAAC1B,GACR,EAAKD,cAAcC,EAAIC,KAJ3B,UAUA,4BACEoB,UAAU,SACVI,KAAK,SACLC,QAAS,SAAC1B,GACR,EAAKS,cAAcT,EAAIC,KAJ3B,eAaN,4BACEwB,KAAK,SACLJ,UAAU,QACVK,QAASJ,KAAKT,eAHhB,oB,GAzFMc,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAhB,SAASiB,eAAe,U","file":"static/js/main.a8b88a54.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    chosenElements: ['Jam'],\n  }\n\n  chooseElement = (ev, product) => {\n    const element = ev.nativeEvent.path[2];\n\n    if (!this.state.chosenElements.includes(product)) {\n      this.setState(state => ({\n        chosenElements: [...state.chosenElements, product],\n      }));\n    }\n\n    element.style.backgroundColor = '#ff6347';\n  }\n\n  removeElement = (ev, product) => {\n    const elemet = ev.nativeEvent.path[2];\n\n    this.setState(state => ({\n      chosenElements: state.chosenElements.filter(item => item !== product),\n    }));\n\n    elemet.style.backgroundColor = '';\n  }\n\n  clearElements = () => {\n    const products = document.querySelectorAll('.goods__product');\n\n    products.forEach((product) => {\n      product.style.backgroundColor = 'transparent';\n    });\n\n    this.setState(state => ({\n      chosenElements: [],\n    }));\n  }\n\n  selectedProducts = (products) => {\n    switch (products.length) {\n      case 0: return ' No products were selected';\n      case 1: return ` ${products} is selected`;\n      default: return ` ${products.join(', ')} are selected`;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>\n            Selected goods:\n            {this.selectedProducts(this.state.chosenElements)}\n          </h1>\n          <div className=\"goods\">\n            {goodsFromServer.map(product => (\n              <div\n                className=\"goods__product\"\n                key={product}\n                style={product === 'Jam'\n                  ? { backgroundColor: '#ff6347' }\n                  : { backgroundColor: 'transparent' }}\n              >\n                {product}\n                <div className=\"buttons\">\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={(ev) => {\n                      this.chooseElement(ev, product);\n                    }}\n\n                  >\n                    Choose\n                  </button>\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={(ev) => {\n                      this.removeElement(ev, product);\n                    }}\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n            ))}\n\n            <button\n              type=\"button\"\n              className=\"clear\"\n              onClick={this.clearElements}\n            >\n              Clear All\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}